<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_ListLens</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Num = (obj_DeckManager.DecksCount - obj_DeckScrollNew.CurrDeckCount);
Text = script_execute(GetDeckNameByIndex, Num - 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !obj_GameController.ProgramClick
{
    if depth &gt; obj_Blocker.depth or obj_GameController.BlockAll
    {exit;}
}

if !btn_OpenDeckList.Usable {exit;}


//Заполняем активную колоду - содержится в объекте "obj_DeckListLens"
obj_DeckListLens.DeckName = Text;
obj_DeckListLens.DeckID = Num;
var ParsedDeck = script_execute(ParseCollection, obj_DeckManager.Decks[Num-1]);
var CardCount = 0;
for (var i = 0; i &lt;= 19; i += 1)
{
    obj_DeckListLens.DeckCards[i] = ParsedDeck[i+2];
    if real(obj_DeckListLens.DeckCards[i]) != 0
    {
        CardCount += 1;
    }
    //Запоминаем те же значения для возможности отката изменений
    obj_DeckListLens.SavedDeckCards[i] = ParsedDeck[i+2];
}
obj_DeckListLens.CardsInDeckCount = CardCount;
//Запоминаем те же значения для возможности отката изменений
obj_DeckListLens.SavedCardsInDeckCount = obj_DeckListLens.CardsInDeckCount
obj_DeckListLens.SavedDeckName = obj_DeckListLens.DeckName;
obj_DeckListLens.SavedDeckID = obj_DeckListLens.DeckID;

//Обновляем отображение наличия карт в колоде
script_execute(SetCardInDeckVision);
//Обновляем карты на листе карт
script_execute(CreateCardListFromDeck);

//Имитируем клик на кнопку списка для его закрытия
obj_GameController.ProgramClick = true;
with btn_OpenDeckList
{
event_perform(ev_mouse, ev_left_release);
}
obj_GameController.ProgramClick = false;

//При закрытии кнопка новой колоды должна быть недоступна
if instance_exists(btn_NewDeck)
{
    btn_NewDeck.Active = false;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sp_DeckListElem, 0, x, y);
draw_set_font(font1);
draw_set_colour(c_black);
draw_text(x, y - 10, Text + " " + string(Num));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
