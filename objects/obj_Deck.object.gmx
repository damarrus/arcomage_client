<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_Deck</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DeckID = round(real(obj_DeckManager.CurrentDeckNum));
Moving = false;
DeckName = obj_DeckManager.CurrentDeckName;
SavedDeckName = DeckName;
SavedDeckNum = DeckID;
Active = false;
Usable = true;
image_speed = 0;
PositionY = y;


New = obj_DeckManager.New;
obj_DeckManager.New = false;

if New //Создаем массив с id карт, если колода новая - все id = 0; 
{
    
    for (var i = 0; i &lt;=(global.MaxDeck - 1); i = i + 1)
    {
        CardsID[i] = 0;      
    }
}
else
{
    
    for (i = 0; i &lt;=(global.MaxDeck - 1); i = i + 1)
    {
        CardsID[i] = obj_DeckManager.CurrentDeckCards[i];
        SavedCardsID[i] = CardsID[i];
    }

} 

CardsInDeck = 0;
for (i = 0; i &lt;=(global.MaxDeck - 1); i = i + 1) //Считаем сколько карт у нас в колоде
{
    if !real(CardsID[i]) = 0
    {
    CardsInDeck += 1;
    }     
}
SavedCardsInDeck = CardsInDeck; //Сохраняем сколько было карт до сохранения    



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !Usable
{exit;}

if Active and btn_SaveDeck.visible
{
    obj_DeckManager.PressedDeckID = id;
    script_execute(CreateMultiDialog, 800, 500, "U have unsaved changes", "" ,"Don't save", "RestoreSavedDeck", "Back", "","","")

}
else if Active = false
{
    
    var ID = id;
    
    with (obj_Deck)
    {
        Usable = false;
        if ID != id
        {
            Active = false;
            image_speed = 0.3;
        }
    }
    Active = true;
    ScrollSpeed = - 10;
    
}
else if Active = true
{
    
    with (obj_Deck)
    {
        Usable = false; 
    }
    ScrollSpeed = 10;
    obj_DeckScroll.Shrinking = false;
    obj_DeckScroll.Action = true;
    
    with (obj_CardInList) //Удаляем весь список карт со стола
    {
        instance_destroy();
    }
    
    script_execute(SetCardInDeckVision); //Отображаем какие карты уже в колоде, а какие нет
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_sprite(sp_Deck, image_index ,x,y);

if image_index &gt;= 0 and image_speed = 0
{
    draw_text(x, y - 20, DeckName + string(Active));
    draw_text(x, y, CardsInDeck);
}
else if image_index &lt;= 0 and image_speed &lt; 0
{
    image_speed = 0; 
    image_index = 0;   
}


if image_index &gt;= 5 and visible = true and image_speed &gt; 0
{
    image_speed = 0;
    visible = false;
    with obj_Deck
    {
        if Active and !Moving
        {
            script_execute(SetCardMoving, x, obj_DeckManager.DecksListY, 16);
        }
    }
}

if Moving
{
    
    x += MoveSpeedX;
    y += MoveSpeedY;    
    
    
    if abs(DestinationX - x) &lt; abs(MoveSpeedX)
    {
        MoveSpeedX = (DestinationX - x);   
    }
    if abs(DestinationY - y) &lt; abs(MoveSpeedY)
    {
        MoveSpeedY = (DestinationY - y);   
    }
    
    if (abs(DestinationX - x) &lt; 1) and (abs(DestinationY - y) &lt; 1)
    {
        
        var ID = id;
        if Active
        { 
            script_execute(CreateScroll);
        }
        else
        {
            with (obj_Deck)
            {
                Usable = true; 
                if ID != id
                {
                    image_speed = -0.3;
                }
                visible = true;
                Active = false; 
            }
        }
        x = DestinationX;
        y = DestinationY;
        Moving = false;
        MoveSpeedX = 0;
        MoveSpeedY = 0;
        
        
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
