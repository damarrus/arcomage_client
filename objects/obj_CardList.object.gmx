<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_CardList</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>XStart = x;
Moving = false;
visible = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Moving
{
    var Delta = x;
    x += MoveSpeedX;
    y += MoveSpeedY;  
    
    if abs(DestinationX - x) &lt; abs(MoveSpeedX)
    {
        MoveSpeedX = (DestinationX - x);   
    }
    if abs(DestinationY - y) &lt; abs(MoveSpeedY)
    {
        MoveSpeedY = (DestinationY - y);   
    }
   
    if (abs(DestinationX - x) &lt; 1) and (abs(DestinationY - y) &lt; 1)
    {
        x = DestinationX;
        y = DestinationY;
        Moving = false;
        MoveSpeedX = 0;
        MoveSpeedY = 0;
    }
    Delta = Delta - x;
    with obj_CardInList
    {
        x -= Delta;
        
    }
    obj_GameController.BlockAll = false;
    
    if x = XStart
    {
        with obj_CardInList
        {
            instance_destroy();
        }
        btn_DeleteDeck.Active = false;
        btn_DeleteDeck.visible = false;
        script_execute(SetCardInDeckVision);
        script_execute(CreateDeckScroll);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
