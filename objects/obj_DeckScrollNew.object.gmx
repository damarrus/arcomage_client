<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_ScrollDown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Shrinking       = true;
Action          = true;
DistanceBtw     = 10;
Part            = 0;
Speed           = 20;
StartY          = y;
Y               = y;
CurrDeckCount   = 0;
EndY            = btn_OpenDeckList.Indent + 10 + StartY + (obj_DeckManager.DecksCount + 1) * (sprite_get_height(sp_DeckListElem) + DistanceBtw);
obj_GameController.BlockAll = true;

if obj_DeckManager.DecksCount &lt; 10
{
instance_create(x + 1.5, y - 90, btn_NewDeck);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with btn_NewDeck
{instance_destroy();}

with obj_DeckListElem
{instance_destroy();}

obj_GameController.BlockAll = false;

if obj_DeckListLens.DeckName != ""
{
    if btn_OpenDeckList.visible
    {
        with obj_CardList
        {
            obj_GameController.BlockAll = true;
            script_execute(SetCardMoving, XStart - 365, y, 24);
        }
        
        btn_DeleteDeck.visible = true;
        btn_DeleteDeck.Active = true;
    }
    
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var Width = sprite_get_width(sp_ScrollDown); 
var Height = sprite_get_height(sp_ScrollDown);
var ScrSpeed = 0;

if Action
{
    if Shrinking //Свиток Выдвигается 
    {
        var LastElem = "";
        var Delta = Y;
        if Y + Speed &lt; EndY  
        {
            for (var i = 1; i &lt;= Speed; i+= 1)
            {
                if Part = btn_OpenDeckList.Indent + CurrDeckCount * (DistanceBtw + sprite_get_height(sp_DeckListElem)) and CurrDeckCount &lt; obj_DeckManager.DecksCount
                {
                    if LastElem = ""
                    {
                        LastElem = instance_create(obj_DeckListLens.x, obj_DeckListLens.y, obj_DeckListElem);
                    }
                    else
                    {
                        LastElem = instance_create(LastElem.x, LastElem.y + DistanceBtw + sprite_get_height(sp_DeckListElem), obj_DeckListElem);    
                    }
                    CurrDeckCount += 1;
                }
                
                with obj_DeckListElem
                {
                    y += 1;
                }
                if instance_exists(btn_NewDeck)
                {
                    btn_NewDeck.y += 1;
                }
                Part += 1;
                Y    += 1;
            }
            
        }
        else        
        {
            
            Part               += (EndY - Y);
            Y                   += (EndY - Y); 
            Action              = false; 
            btn_OpenDeckList.Usable  = true; 
            
            Delta =  Y - Delta;
            with obj_DeckListElem
            {
                y += Delta;
            }
            if instance_exists(btn_NewDeck)
            {
                btn_NewDeck.y += Delta;
                btn_NewDeck.Active = true;
            }
            
            
            obj_GameController.BlockAll = false;
        }
        
        
        
    }
    else    //Свиток задвигается 
    {
        Part    -= Speed;
        Y       -= Speed;
        
        with obj_DeckListElem
        {
            if y - obj_DeckScrollNew.Speed &lt; obj_DeckListLens.y
            {
                instance_destroy();    
            }
            y -= obj_DeckScrollNew.Speed;
        }
        if instance_exists(btn_NewDeck)
        {
            btn_NewDeck.y -= Speed;
        }
            
        }
        if Y &lt; StartY
        {
            btn_OpenDeckList.Usable  = true; 
            instance_destroy();
        }
       
}


draw_sprite_part(sp_ScrollDown, 0, 0, Height - Part, Width, Height, x - Width / 2 ,y - sprite_get_height(sp_ListLens) / 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
